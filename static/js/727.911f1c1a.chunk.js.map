{"version":3,"file":"static/js/727.911f1c1a.chunk.js","mappings":"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","sources":["api/api.js","components/CastListItem/CastListItem.jsx","components/CastList/CastList.jsx","pages/CastPage/CastPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL_TREND = 'https://api.themoviedb.org/3/trending/movie/day';\nconst URL_DETAILS = 'https://api.themoviedb.org/3/movie/';\nconst URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\n\nconst API_KEY = '9347350ba2bb7631373e3da2add3bd27';\n\nexport const fetchTrends = () => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: '1',\n    include_adult: false,\n    per_page: '20',\n  });\n\n  return axios.get(`${URL_TREND}?${params}`);\n};\n\nexport const fetchDetails = id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios.get(`${URL_DETAILS}/${id}?${params}`);\n};\n\nexport const fetchSearchFilms = query => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: query,\n    page: '1',\n  });\n\n  return axios.get(`${URL_SEARCH}?${params}`);\n};\n\nexport const fetchCast = id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios.get(`${URL_DETAILS}/${id}/credits?${params}`);\n};\n\nexport const fetchReview = id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios.get(`${URL_DETAILS}/${id}/reviews?${params}`);\n};\n","const CastListItem = ({ item }) => {\n  return (\n    <li>\n      <img\n        src={\n          item.profile_path\n            ? `https://image.tmdb.org/t/p/original/${item.profile_path}`\n            : ''\n        }\n        alt=\"\"\n        width=\"80\"\n        height=\"80\"\n      />\n      <h3>{item.name}</h3>\n      <p>{item.character}</p>\n    </li>\n  );\n};\n\nexport default CastListItem;\n","import CastListItem from 'components/CastListItem/CastListItem';\n\nconst CastList = ({ items }) => {\n  const elements = items.map(item => (\n    <CastListItem key={item.id} item={item} />\n  ));\n\n  return <ul>{elements}</ul>;\n};\n\nexport default CastList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'api/api';\nimport CastList from 'components/CastList/CastList';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCasts = async () => {\n      if (!movieId) {\n        return;\n      }\n      try {\n        setLoading(true);\n        const { data } = await fetchCast(movieId);\n        setCast(data?.cast ? data.cast : []);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCasts();\n  }, [movieId]);\n\n  const isCast = Boolean(cast.length);\n  console.log(cast);\n  return (\n    <>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {isCast && <CastList items={cast} />}\n    </>\n  );\n};\n\nexport default CastPage;\n"],"names":["URL_DETAILS","API_KEY","fetchTrends","params","URLSearchParams","api_key","language","page","include_adult","per_page","axios","concat","fetchDetails","id","fetchSearchFilms","query","fetchCast","fetchReview","_ref","item","_jsxs","children","_jsx","src","profile_path","alt","width","height","name","character","elements","items","map","CastListItem","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","fetchCasts","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchCast","data","_context","prev","next","abrupt","sent","t0","message","finish","stop","apply","arguments","isCast","Boolean","length","console","log","_Fragment","CastList"],"sourceRoot":""}