{"version":3,"file":"static/js/868.c6f504f7.chunk.js","mappings":"mRAGMA,EAAc,sCAGdC,EAAU,mCAEHC,EAAc,WACzB,IAAMC,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,EACTK,SAAU,QACVC,KAAM,IACNC,eAAe,EACfC,SAAU,OAGZ,OAAOC,EAAAA,EAAAA,IAAU,GAADC,OAfA,kDAea,KAAAA,OAAIR,GACnC,EAEaS,EAAe,SAAAC,GAC1B,IAAMV,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAGX,OAAOS,EAAAA,EAAAA,IAAU,GAADC,OAAIX,EAAW,KAAAW,OAAIE,EAAE,KAAAF,OAAIR,GAC3C,EAEaW,EAAmB,SAAAC,GAC9B,IAAMZ,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,EACTK,SAAU,QACVE,eAAe,EACfO,MAAOA,EACPR,KAAM,MAGR,OAAOG,EAAAA,EAAAA,IAAU,GAADC,OAjCC,4CAiCa,KAAAA,OAAIR,GACpC,EAEaa,EAAY,SAAAH,GACvB,IAAMV,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAGX,OAAOS,EAAAA,EAAAA,IAAU,GAADC,OAAIX,EAAW,KAAAW,OAAIE,EAAE,aAAAF,OAAYR,GACnD,EAEac,EAAc,SAAAJ,GACzB,IAAMV,EAAS,IAAIC,gBAAgB,CACjCC,QAASJ,IAGX,OAAOS,EAAAA,EAAAA,IAAU,GAADC,OAAIX,EAAW,KAAAW,OAAIE,EAAE,aAAAF,OAAYR,GACnD,C,+IC5CA,EAVwB,SAAHe,GAAkB,IAAZC,EAAID,EAAJC,KACzB,OACEC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,cAAaC,SAAA,EACzBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,WAASH,EAAKI,WAClBH,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,kBAAgBH,EAAKK,WACxBC,EAAAA,EAAAA,KAAA,KAAAH,SAAIH,EAAKO,YAGf,ECEA,EARoB,SAAHR,GAAmB,IAC5BS,EADoBT,EAALU,MACEC,KAAI,SAAAV,GAAI,OAC7BM,EAAAA,EAAAA,KAACK,EAAe,CAAeX,KAAMA,GAAfA,EAAKN,GAAkB,IAG/C,OAAOY,EAAAA,EAAAA,KAAA,MAAIJ,UAAU,cAAaC,SAAEK,GACtC,ECiCA,EApCoB,WAClB,IAAAI,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEdG,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,eAAA9B,GAAA+B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACZX,EAAQ,CAADS,EAAAE,KAAA,eAAAF,EAAAG,OAAA,iBAIO,OAJPH,EAAAC,KAAA,EAIVf,GAAW,GAAMc,EAAAE,KAAA,GACMvC,EAAAA,EAAAA,IAAY4B,GAAS,KAAD,EAAAO,EAAAE,EAAAI,KAAnCL,EAAID,EAAJC,KACRjB,EAAe,OAAJiB,QAAI,IAAJA,GAAAA,EAAMM,QAAUN,EAAKM,QAAU,IAAIL,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAM,GAAAN,EAAA,SAE9CV,EAASU,EAAAM,GAAMC,SAAS,QAEN,OAFMP,EAAAC,KAAA,GAExBf,GAAW,GAAOc,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,yBAErB,kBAbe,OAAAjC,EAAA8C,MAAA,KAAAC,UAAA,KAchBjB,GACF,GAAG,CAACH,IAEJ,IAAMqB,EAAYC,QAAQhC,EAAQiC,QAElC,OACEhD,EAAAA,EAAAA,MAAAiD,EAAAA,SAAA,CAAA/C,SAAA,CACGiB,IAAWd,EAAAA,EAAAA,KAAA,KAAAH,SAAG,eACdqB,IAASlB,EAAAA,EAAAA,KAAA,KAAAH,SAAIqB,IACbuB,IAAazC,EAAAA,EAAAA,KAAC6C,EAAW,CAAC1C,MAAOO,MAGxC,C","sources":["api/api.js","components/ReviewsListItem/ReviewsListItem.jsx","components/ReviewsList/ReviewsList.jsx","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL_TREND = 'https://api.themoviedb.org/3/trending/movie/day';\nconst URL_DETAILS = 'https://api.themoviedb.org/3/movie/';\nconst URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\n\nconst API_KEY = '9347350ba2bb7631373e3da2add3bd27';\n\nexport const fetchTrends = () => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: '1',\n    include_adult: false,\n    per_page: '20',\n  });\n\n  return axios.get(`${URL_TREND}?${params}`);\n};\n\nexport const fetchDetails = id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios.get(`${URL_DETAILS}/${id}?${params}`);\n};\n\nexport const fetchSearchFilms = query => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: query,\n    page: '1',\n  });\n\n  return axios.get(`${URL_SEARCH}?${params}`);\n};\n\nexport const fetchCast = id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios.get(`${URL_DETAILS}/${id}/credits?${params}`);\n};\n\nexport const fetchReview = id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios.get(`${URL_DETAILS}/${id}/reviews?${params}`);\n};\n","const ReviewsListItem = ({ item }) => {\n  return (\n    <li className=\"ReviewsItem\">\n      <h3>Author: {item.author}</h3>\n      <p>Author rating: {item.rating}</p>\n      <p>{item.content}</p>\n    </li>\n  );\n};\n\nexport default ReviewsListItem;\n","import ReviewsListItem from 'components/ReviewsListItem/ReviewsListItem';\n\nconst ReviewsList = ({ items }) => {\n  const elements = items.map(item => (\n    <ReviewsListItem key={item.id} item={item} />\n  ));\n\n  return <ul className=\"ReviewsList\">{elements}</ul>;\n};\n\nexport default ReviewsList;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReview } from 'api/api';\nimport ReviewsList from 'components/ReviewsList/ReviewsList';\n\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCasts = async () => {\n      if (!movieId) {\n        return;\n      }\n      try {\n        setLoading(true);\n        const { data } = await fetchReview(movieId);\n        setReviews(data?.results ? data.results : []);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCasts();\n  }, [movieId]);\n\n  const isReviews = Boolean(reviews.length);\n\n  return (\n    <>\n      {loading && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {isReviews && <ReviewsList items={reviews} />}\n    </>\n  );\n};\n\nexport default ReviewsPage;\n"],"names":["URL_DETAILS","API_KEY","fetchTrends","params","URLSearchParams","api_key","language","page","include_adult","per_page","axios","concat","fetchDetails","id","fetchSearchFilms","query","fetchCast","fetchReview","_ref","item","_jsxs","className","children","author","rating","_jsx","content","elements","items","map","ReviewsListItem","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","useEffect","fetchCasts","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchReview","data","_context","prev","next","abrupt","sent","results","t0","message","finish","stop","apply","arguments","isReviews","Boolean","length","_Fragment","ReviewsList"],"sourceRoot":""}