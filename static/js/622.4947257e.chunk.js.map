{"version":3,"file":"static/js/622.4947257e.chunk.js","mappings":"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","sources":["api/api.js","components/SingleFilm/SingleFilm.jsx","pages/SingleFilmPage/SingleFilmPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL_TREND = 'https://api.themoviedb.org/3/trending/movie/day';\nconst URL_DETAILS = 'https://api.themoviedb.org/3/movie/';\nconst URL_SEARCH = 'https://api.themoviedb.org/3/search/movie';\n\nconst API_KEY = '9347350ba2bb7631373e3da2add3bd27';\n\nexport const fetchTrends = () => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: '1',\n    include_adult: false,\n    per_page: '20',\n  });\n\n  return axios.get(`${URL_TREND}?${params}`);\n};\n\nexport const fetchDetails = id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios.get(`${URL_DETAILS}/${id}?${params}`);\n};\n\nexport const fetchSearchFilms = query => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n    query: query,\n    page: '1',\n  });\n\n  return axios.get(`${URL_SEARCH}?${params}`);\n};\n\nexport const fetchCast = id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios.get(`${URL_DETAILS}/${id}/credits?${params}`);\n};\n\nexport const fetchReview = id => {\n  const params = new URLSearchParams({\n    api_key: API_KEY,\n  });\n\n  return axios.get(`${URL_DETAILS}/${id}/reviews?${params}`);\n};\n","import { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchDetails } from 'api/api';\nimport { Link, Outlet } from 'react-router-dom';\n\nconst SinglePost = () => {\n  const [film, setFilm] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetchPosts = async () => {\n      try {\n        setLoading(true);\n        const { data } = await fetchDetails(movieId);\n        setFilm(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, [movieId]);\n\n  const dateString = film?.release_date;\n  const dateObject = new Date(Date.parse(dateString));\n  const year = dateObject.getFullYear();\n\n  const genres = film?.genres\n    ? film.genres.map(genre => genre.name).join(',')\n    : '';\n\n  const from = location.state?.from || '/';\n\n  return (\n    <>\n      {loading && <p>Loading...</p>}\n      {error && <p>Error: {error}</p>}\n      <button onClick={() => navigate(from)} type=\"button\">\n        Go back\n      </button>\n      {film && (\n        <div>\n          <div className=\"FilmDetails\">\n            <div>\n              <img\n                src={`https://image.tmdb.org/t/p/original/${film.poster_path}`}\n                alt={film.title}\n                width=\"240\"\n                height=\"240\"\n              />\n            </div>\n            <div>\n              <div>\n                <h2>{film.original_title + ' ' + year}</h2>\n                <p>User Score:{film.vote_average}</p>\n              </div>\n              <div>\n                <h3>Overview</h3>\n                <p>{film.overview}</p>\n              </div>\n              <div>\n                <h3>Genres</h3>\n                <p>{genres}</p>\n              </div>\n            </div>\n          </div>\n          <div>\n            <h3>Additional information</h3>\n            <ul className=\"Infolist\">\n              <li>\n                <Link to=\"cast\" state={{ from }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to=\"reviews\" state={{ from }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n            <Outlet />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default SinglePost;\n","import SingleFilm from 'components/SingleFilm/SingleFilm';\n\nconst SingleFilmpPage = () => {\n  return (\n    <div>\n      <p>Film</p>\n      <SingleFilm />\n    </div>\n  );\n};\n\nexport default SingleFilmpPage;\n"],"names":["URL_DETAILS","API_KEY","fetchTrends","params","URLSearchParams","api_key","language","page","include_adult","per_page","axios","concat","fetchDetails","id","fetchSearchFilms","query","fetchCast","fetchReview","_location$state","_useState","useState","_useState2","_slicedToArray","film","setFilm","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","movieId","useParams","location","useLocation","navigate","useNavigate","useEffect","fetchPosts","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchDetails","data","_context","prev","next","sent","t0","message","finish","stop","apply","arguments","dateString","release_date","year","Date","parse","getFullYear","genres","map","genre","name","join","from","state","_jsxs","_Fragment","children","_jsx","onClick","type","className","src","poster_path","alt","title","width","height","original_title","vote_average","overview","Link","to","Outlet","SingleFilm"],"sourceRoot":""}